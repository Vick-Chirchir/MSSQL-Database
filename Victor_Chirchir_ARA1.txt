15.	Redo the exact example using similar tables from the same database

1. CONCATENATION

SELECT LNAME||'-'||FNAME as Full_Name
FROM oes.employee; 

FULL_NAME               
-------------------------
Wyatt- Stefan            
Wright-Donald            
Worral-Al                
Wooton-Bruce             
Widdes-Albert    

2. INITCAP function 

CLEAR COLUMN
COLUMN LNAME HEADING "Last Name" FORMAT A10
COLUMN Proper_Lname HEADING "Proper|Last Name" FORMAT A10
COLUMN fname  HEADING "First Name"FORMAT A10
COLUMN Proper_fname HEADING "Proper|First Name" FORMAT A10

SELECT LNAME, INITCAP(LNAME) AS Proper_Lname, fname, INITCAP(fname) AS Proper_fname 
FROM employee;

columns cleared

           Proper                Proper   
Last Name  Last Name  First Name First Name
---------- ---------- ---------- ----------
Wyatt      Wyatt       Stefan     Stefan   
Wright     Wright     Donald     Donald    
Worral     Worral     Al         Al        
Wooton     Wooton     Bruce      Bruce     
Widdes     Widdes     Albert     Albert 

3.LOWER function - 3


SELECT PRODUCT_NO,LOWER(BRAND) BRAND, PRODUCT_CATEGORY, UNIT_PRICE          
FROM PRODUCT
WHERE LOWER(PRODUCT_CATEGORY) = 'players';

no rows selected


4. LPAD Function

SELECT LPAD(FNAME,15,'*') AS FIRST_NAME,LPAD(LNAME,15,'*') AS LAST_NAME
FROM EMPLOYEE;

FIRST_NAME      LAST_NAME     
--------------- ---------------
******** Stefan **********Wyatt
*********Donald *********Wright
*************Al *********Worral
**********Bruce *********Wooton
*********Albert *********Widdes
*****William C. ********Wehland
**********Peter *********Thomas
****Patricia A. *********Thomas

SELECT LPAD(FNAME,15,' ') AS FIRST_NAME,LPAD(LNAME,15,' ') AS LAST_NAME
FROM EMPLOYEE;

FIRST_NAME      LAST_NAME     
--------------- ---------------
         Stefan           Wyatt
         Donald          Wright
             Al          Worral
          Bruce          Wooton
         Albert          Widdes
     William C.         Wehland


5. RPAD function

SELECT fname, RPAD(FNAME,15,'*') AS TRIMMED_FNAME,lname, RPAD(LNAME,15,'*') AS TRIMMED_LNAME
FROM EMPLOYEE; 


First Name TRIMMED_FNAME   Last Name  TRIMMED_LNAME 
---------- --------------- ---------- ---------------
Judy       Judy*********** Holman     Holman*********
Jullian    Jullian******** Wyatt      Wyatt**********
Lee        Lee************ Hanzdo     Hanzdo*********
Macy       Macy*********** Stewart    Stewart********


6. LTRIM function

COLUMN TRIMMED_FNAME FORMAT A15
COLUMN FNAME FORMAT A15
SELECT  FNAME, LTRIM(FNAME, 'MSJK') AS TRIMMED_FNAME 
FROM employee;


First Name      TRIMMED_FNAME 
--------------- ---------------
Steward         teward         
Bill            Bill           
Steven          teven          
Jan             an  


7. RTRIM function

COLUMN TRIMMED_LNAME FORMAT A15   
COLUMN lname heading "Last Name" FORMAT A12 justify center 
 
SELECT  LNAME, RTRIM(LNAME, 'NZSRDMA') AS TRIMMED_LNAME 
FROM Employee;



 Last Name   TRIMMED_LNAME 
------------ ---------------
Wyatt        Wyatt          
Wright       Wright         
Worral       Worral         
Wooton       Wooton         
Widdes       Widdes         
Wehland      Wehland        
Thomas       Thomas         
Thomas       Thomas         
Stone        Stone          
Stewart      Stewart        
Stansbury    Stansbury

NOTE: MY QUERY DID NOT EXECITE RTRIM FUNTION


8. TRIM function

COLUMN LEADING_OPT FORMAT A10
COLUMN TRAILING_OPT FORMAT A10
COLUMN BOTH_OPT FORMAT A10
 
SELECT  fname, 
	TRIM(LEADING 'S' FROM FNAME) AS LEADING_OPT, 
	TRIM(TRAILING 'L' FROM FNAME) AS TRAILING_OPT,  
	TRIM(BOTH 'H' FROM FNAME) AS BOTH_OPT
FROM employee; 



First Name      LEADING_OP TRAILING_O BOTH_OPT   
--------------- ---------- ---------- ------------
John C.         John C.    John C.    John C.     
Thomas          Thomas     Thomas     Thomas      
Steward         teward     Steward    Steward     
Bill            Bill       Bill       Bill        
Steven          teven      Steven     Steven 

NOTE:  TRAILING 'L' DID NOT EXECUTE ON MY RESULT


9. SUBSTR function

clear columns
col First_3CHAR heading "First_3CHAR|First Name" format a12
SELECT fname, SUBSTR(FNAME,1,3) First_3CHAR
FROM employee;


columns cleared

             First_3CHAR
FNAME        First Name 
------------ ------------
 Stefan       St         
Donald       Don         
Al           Al          
Bruce        Bru         
Albert       Alb         
William C.   Wil         
Peter        Pet         
Patricia A.  Pat         
James F.     Jam         
John C.      Joh    


clear columns
col First_3CHAR heading "First_3CHAR|First Name" format a12
SELECT fname, SUBSTR(FNAME,1,3) First_3CHAR
FROM oes2.employee;


             First_3CHAR
FNAME        First Name 
------------ ------------
Thomas       Tho         
Steward      Ste         
Bill         Bil         
Steven       Ste         
Jan          Jan         
Donna        Don         
Neil         Nei         
Andrew       And         
Robert       Rob         
Donn         Don    


10. TO_CHAR function

col year format a4
col Month format a5
SELECT 	lname, 
	SUBSTR(TO_CHAR(DOB),4,3) AS MONTH,
	SUBSTR(TO_CHAR(DOB),8,2) AS YEAR
	FROM oes2.employee; 

LNAME        MONTH YEAR
------------ ----- ----
Wyatt        MAY   54  
Wright       NOV   54  
Worral       MAY   55  
Wooton       NOV   55  
Widdes       MAY   56  
Wehland      NOV   56  
Thomas       MAY   57  
Thomas       NOV   57  
Stone        MAY   58  



col year format a4
col Month format a5
SELECT 	lname, 
	SUBSTR(TO_CHAR(DOB),4,3) AS MONTH,
	SUBSTR(TO_CHAR(DOB),8,2) AS YEAR,
	TO_CHAR (DOB, 'Mon') as MONTH2
FROM oes2.employee
where rownum<6;


LNAME        MONTH YEAR MONTH2     
------------ ----- ---- ------------
Wyatt        MAY   54   May         
Wright       NOV   54   Nov         
Worral       MAY   55   May         
Wooton       NOV   55   Nov         
Widdes       MAY   56   May


11. UPPER function

col street format a18
col city format a10
SELECT UPPER(street) street, 
		 UPPER(city) city
FROM branch;


3415 OLANWOOD COURT SUITE 202	MANKATO
307 W. ALLEGHENY AVENUE	SAINT PAUL
145 LAYWERS ROW	ROCHESTER
1717 ARCH STREET	SPRINGFIELD
200 PENNSYLVANIA, SUITE 200	WASHINGTON
14714 MAIN STREET	DOVER



Date Functions: Date pictures 

select 	StaffNo, Fname, Lname, DOB
		,to_char(DOB, 'DD-MON-YY') as DOB_CHAR
		,to_char(DOB, '"Birth year is "YY') as Birth_Year
from prop.staff;


STAFFNO    FNAME      LNAME      DOB        DOB_CHAR           BIRTH_YEAR     
---------- ---------- ---------- ---------- ------------------ ----------------
SL21       John       White      01-OCT-45  01-OCT-45          Birth year is 45
SG37       Ann        Beech      10-NOV-60  10-NOV-60          Birth year is 60
SG14       David      Ford       24-MAR-58  24-MAR-58          Birth year is 58
SA9        Mary       Howe       19-FEB-70  19-FEB-70          Birth year is 70
SG5        Susan      Brand      03-JUN-40  03-JUN-40          Birth year is 40
SL41       Julie      Lee        13-JUN-65  13-JUN-65          Birth year is 65


**1. Add_Months function

select 	Rent_Finish, 
		rent_finish+365 as "Add operation",
		add_months (rent_finish, 12) as "ADD_MONTH FUNC"
from lease
where property_No = 'PL94';


NOTE: NONE OF MY DATABASE HAD THE LEASE TABLE.


2. Months_Between Functions

select 	Lease_No, 
	Months_between(rent_finish, Rent_start) as "Lease Duration"
from lease;

NOTE: NONE OF MY DATABASE HAD THE LEASE TABLE.

3. LAST_DAY  Functions: Multiplication

select 	DOB 
	, Last_day(DOB) Last_Date
	, to_char(Last_day(DOB), 'DAY') DAY
from staff
where lname = 'Ford';


DOB        LAST_DATE DAY                                
---------- --------- ------------------------------------
24-MAR-58  31-MAR-58 MONDAY 

4. Next_Day Functions

clear col
select 	lname, fname, DOB
		,next_day(add_months(DOB, 12*21), 'Saturday') as "Sat After" 
from staff;



LNAME           FNAME           DOB       Sat After
--------------- --------------- --------- ---------
White           John            01-OCT-45 02-OCT-66
Beech           Ann             10-NOV-60 14-NOV-81
Ford            David           24-MAR-58 31-MAR-79
Howe            Mary            19-FEB-70 23-FEB-91
Brand           Susan           03-JUN-40 04-JUN-61
Lee             Julie           13-JUN-65 14-JUN-86


select 	lname,fname,DOB
	,to_char(add_months(DOB, 21*12) +1, 'Day') || ' ' ||
	next_day(add_months(DOB, 21*12), to_char(add_months(DOB, 21*12) +1, 'Day') ) as "Hang Over Day"
from staff;


White	John	01-OCT-45	Saturday  02-OCT-66
Beech	Ann	10-NOV-60	Wednesday 11-NOV-81
Ford	David	24-MAR-58	Sunday    25-MAR-79
Howe	Mary	19-FEB-70	Wednesday 20-FEB-91
Brand	Susan	03-JUN-40	Saturday  04-JUN-61
Lee	Julie	13-JUN-65	Saturday  14-JUN-86





5. DECODE function 


SELECT 	lname, POSITION, 
	DECODE(POSITION,'Assistant','Manager',
                  'Vice President', 'Sr Vice President',
			   'other') as "New Position"
from employee;


LNAME          POSITION New Position    
------------ ---------- -----------------
Wyatt                 1 other            
Wright                2 other            
Worral                3 other            
Wooton                4 other            
Widdes                4 other            
Wehland               4 other            
Thomas                5 other            
Thomas                6 other            
Stone                 6 other            
Stewart               7 other            
Stansbury             8 other            


SELECT lname, POSITION
FROM employee
ORDER BY DECODE(POSITION,'President',5,'Vice President',4,'Manager',3,'Assistant',2, 'Sales Rep',1) DESC;

LNAME          POSITION
------------ ----------
Wyatt                 1
Wright                2
Worral                3
Wooton                4
Widdes                4
Wehland               4
Thomas                5

6. CASE expressions 

SELECT (CASE 
	WHEN UNIT_PRICE >=10 AND UNIT_PRICE <40 THEN '20 TO 39'
	WHEN UNIT_PRICE >=40 AND UNIT_PRICE <100 THEN '40 TO 99'
	WHEN UNIT_PRICE >=100 AND UNIT_PRICE <600 THEN '100 TO 599'		
	WHEN UNIT_PRICE >=600 AND UNIT_PRICE <1000 THEN '600 TO 999'
	WHEN UNIT_PRICE >1000 THEN 'ABOVE 1000' END) "RANGE", COUNT(*) AS UNIT_PRICE_COUNT
FROM PRODUCT
GROUP BY (CASE 
	WHEN UNIT_PRICE >=10 AND UNIT_PRICE <40 THEN '20 TO 39'
	WHEN UNIT_PRICE >=40 AND UNIT_PRICE <100 THEN '40 TO 99'
	WHEN UNIT_PRICE >=100 AND UNIT_PRICE <600 THEN '100 TO 599'		WHEN UNIT_PRICE >=600 AND UNIT_PRICE <1000 THEN '600 TO 999'
	WHEN UNIT_PRICE >1000 THEN 'ABOVE 1000' END);



RANGE                             UNIT_PRICE_COUNT
---------- ---------------------------------------
40 TO 99                                         5
100 TO 599                                       3
ABOVE 1000                                       2           
 


SELECT (CASE 	WHEN shipping_method = 'Ground' THEN 'ground'
              	WHEN shipping_method = 'ground' THEN 'ground'
              	WHEN shipping_method = 'ground-air' THEN 'ground'
              	WHEN shipping_method = '1day' THEN '1-day'
              	WHEN shipping_method = '1day-air' THEN '1-day'
			WHEN shipping_method = '1-day' THEN '1-day'
              	WHEN shipping_method = '2day' THEN '2-day'
              	WHEN shipping_method = '2day-air' THEN '2-day'
			WHEN shipping_method = '2-day' THEN '2-day'
        END) AS "ShippingMethod", sum(total_amt) AS "Total"
FROM oes2.orders
GROUP BY (CASE WHEN shipping_method = 'Ground' THEN 'ground'
         	WHEN shipping_method = 'ground' THEN 'ground'
         	WHEN shipping_method = 'ground-air' THEN 'ground'
		  	WHEN shipping_method = '1day' THEN '1-day'
         	WHEN shipping_method = '1day-air' THEN '1-day'
			WHEN shipping_method = '1-day' THEN '1-day'
         	WHEN shipping_method = '2day' THEN '2-day'
		  	WHEN shipping_method = '2day-air' THEN '2-day'
			WHEN shipping_method = '2-day' THEN '2-day'
		  END);


Shippi      Total
------ ----------
1-day     1172882
2-day      890055
ground     964986



SELECT  lname, DOB,
 to_number(substr(DOB, 8, 2)) Year_As_Number,
 to_number(substr(DOB, 1, 2)) Day_As_Number,
 to_number(Ascii(to_CHAR(DOB, 'dd-MON-yy'))) Date_As_Number 
FROM employee;


7. TO_NUMBER, TO_CHAR - Examples

SELECT  lname, DOB,
 to_number(substr(DOB, 8, 2)) Year_As_Number,
 to_number(substr(DOB, 1, 2)) Day_As_Number,
 to_number(Ascii(to_CHAR(DOB, 'dd-MON-yy'))) Date_As_Number 
FROM employee;


Wyatt	12-MAY-54	54	12	49
Wright	10-NOV-54	54	10	49
Worral	12-MAY-55	55	12	49
Wooton	10-NOV-55	55	10	49
Widdes	11-MAY-56	56	11	49
Wehland	09-NOV-56	56	9	48
Thomas	11-MAY-57	57	11	49
Thomas	09-NOV-57	57	9	48
Stone	11-MAY-58	58	11	49


8. NVL function

SELECT LNAME, TEL_NO , NVL(TEL_NO,'Not Available') NVL_USE
FROM CUSTOMER;

LNAME        TEL_NO          NVL_USE       
------------ --------------- ---------------
Inzamam                      Not Available  
Mohammad                     Not Available  
Abdul                        Not Available  
Shahid                       Not Available  
Mohammad                     Not Available 

9. NVL2-Function

SELECT LNAME, TEL_NO , 
NVL2(TEL_NO,'Available','Not Available') NVL2_USE
FROM CUSTOMER


LNAME        TEL_NO          NVL2_USE    
------------ --------------- -------------
Inzamam                      Not Available
Mohammad                     Not Available
Abdul                        Not Available
Shahid                       Not Available
Mohammad                     Not Available



10. GROUP BY
SELECT (CASE 
	WHEN UNIT_PRICE >=10 AND UNIT_PRICE <40 THEN '20 TO 39'
	WHEN UNIT_PRICE >=40 AND UNIT_PRICE <100 THEN '40 TO 99'
	WHEN UNIT_PRICE >=100 AND UNIT_PRICE <600 THEN '100 TO 599'		
	WHEN UNIT_PRICE >=600 AND UNIT_PRICE <1000 THEN '600 TO 999'
	WHEN UNIT_PRICE >1000 THEN 'ABOVE 1000' END) "RANGE", COUNT(*) AS UNIT_PRICE_COUNT
FROM PRODUCT
GROUP BY (CASE 
	WHEN UNIT_PRICE >=10 AND UNIT_PRICE <40 THEN '20 TO 39'
	WHEN UNIT_PRICE >=40 AND UNIT_PRICE <100 THEN '40 TO 99'
	WHEN UNIT_PRICE >=100 AND UNIT_PRICE <600 THEN '100 TO 599'		WHEN UNIT_PRICE >=600 AND UNIT_PRICE <1000 THEN '600 TO 999'
	WHEN UNIT_PRICE >1000 THEN 'ABOVE 1000' END);

  
RANGE                             UNIT_PRICE_COUNT
---------- ---------------------------------------
40 TO 99                                         5
100 TO 599                                       3
ABOVE 1000                                       2




16.	Develop a similar example using a different database

1. CONCATENATION

SELECT LNAME||'-'||FNAME as Full_Name
FROM oes2.employee; 

FULL_NAME               
-------------------------
Bond-Donna               
Adams-Doris              
Allen-Doug               
Alan-Dusky               
Nabb-Earl M.             
Claggett-Edward          
Doering-Edward           
Polott-Edward  


2. INITCAP function 

CLEAR COLUMN
COLUMN LNAME HEADING "Last Name" FORMAT A10
COLUMN Proper_Lname HEADING "Proper|Last Name" FORMAT A10
COLUMN fname  HEADING "First Name"FORMAT A10
COLUMN Proper_fname HEADING "Proper|First Name" FORMAT A10

SELECT LNAME, INITCAP(LNAME) AS Proper_Lname, fname, INITCAP(fname) AS Proper_fname 
FROM OES.employee;

          Proper                Proper   
Last Name  Last Name  First Name First Name
---------- ---------- ---------- ----------
Holman     Holman     Judy       Judy      
Wyatt      Wyatt      Jullian    Jullian   
Hanzdo     Hanzdo     Lee        Lee       
Stewart    Stewart    Macy       Macy  


3.LOWER function - 3


SELECT PRODUCT_NO,LOWER(BRAND) BRAND, PRODUCT_CATEGORY, UNIT_PRICE          
FROM OES.PRODUCT
WHERE LOWER(PRODUCT_CATEGORY) = 'game';

PRODUCT_NO BRAND           PRODUCT_CATEGOR UNIT_PRICE
---------- --------------- --------------- ----------
       120 microsoft       Game                   200
       140 samsung         Game                    50
       130 microsoft       Game                    55
       110 microsoft       Game                   400
       150 sony            Game                    50


4. LPAD Function

SELECT LPAD(FNAME,15,'/') AS FNAME,LPAD(LNAME,15,'?') AS LNAME
FROM OES.EMPLOYEE;

//////// Stefan	??????????Wyatt
/////////Donald	?????????Wright
/////////////Al	?????????Worral
//////////Bruce	?????????Wooton
/////////Albert	?????????Widdes
/////William C.	????????Wehland
//////////Peter	?????????Thomas
////Patricia A.	?????????Thomas



5. RPAD FUNCTION
SELECT fname, RPAD(FNAME,15,'=') AS TRIMMED_FNAME,lname, RPAD(LNAME,15,'$') AS TRIMMED_LNAME
FROM OES.EMPLOYEE; 

First Name TRIMMED_FNAME   Last Name  TRIMMED_LNAME 
---------- --------------- ---------- ---------------
Judy       Judy=========== Holman     Holman$$$$$$$$$
Jullian    Jullian======== Wyatt      Wyatt$$$$$$$$$$
Lee        Lee============ Hanzdo     Hanzdo$$$$$$$$$
Macy       Macy=========== Stewart    Stewart$$$$$$$$

6. LTRIM function


SELECT  FNAME, LTRIM(FNAME, 'MSJK') AS TRIMMED_FNAME 
FROM OES.employee;

First Name TRIMMED_FNAM
---------- ------------
Howard     Howard      
Hubert     Hubert      
James      ames        
James      ames        
James F.   ames F.     
Jan        an          
John       ohn         
John       ohn         
John C.    ohn C.      
Judy       udy         
Jullian    ullian 


7. RTRIM function

 
 SELECT  LAST_NAME, RTRIM(LAST_NAME, 'EMHKGNNS') AS TRIMMED_LNAME 
FROM EDU2.STUDENT;

NOTE: RTRIM FUNCTION DID NOT EXECUTE IN MY QUERY


SELECT  LAST_NAME, 
	TRIM(LEADING 'J' FROM LAST_NAME) AS LEADING_OPT, 
	TRIM(TRAILING 'S' FROM LAST_NAME) AS TRAILING_OPT,  
	TRIM(BOTH 'H' FROM LAST_NAME) AS BOTH_OPT
FROM EDU2.STUDENT; 

LAST_NAME            LEADING_OP TRAILING_O BOTH_OPT 
-------------------- ---------- ---------- ----------
Thompson             Thompson   Thompson   Thompson  
Smith                Smith      Smith      Smith     
James                ames       James      James     
Jones                ones       Jones      Jones     
Jhonson              honson     Jhonson    Jhonson   
Black                Black      Black      Black     
Young                Young      Young      Young     
Smith                Smith      Smith      Smith     
Green                Green      Green      Green 

NOTE: TRIM (TAILIONG AND BOTH) DID NOT EXECUTE.


9. SUBSTR function

SELECT LAST_NAME, SUBSTR(LAST_NAME,1,3) First_3CHAR
FROM EDU2.STUDENT;

LAST_NAME            FIR
-------------------- ---
Thompson             Tho
Smith                Smi
James                Jam
Jones                Jon
Jhonson              Jho
Black                Bla
Young                You
Smith                Smi
Green                Gre


10. TO_CHAR function

SELECT 	TNUMB, 
	SUBSTR(TO_CHAR(START_DATE),4,3) AS MONTH,
	SUBSTR(TO_CHAR(START_DATE),8,2) AS YEAR
	FROM EDU2.DEPT_CHAIR; 

TNUMB MON YE
----- --- --
t21   SEP 02
t42   SEP 12
t75   SEP 18
t79   SEP 11
t9    SEP 13
t96   SEP 02
t5    SEP 08


11. UPPER function

SELECT UPPER(LAST_NAME) LAST_NAME, 
		 UPPER(MAJOR) MAJOR
FROM EDU2.STUDENT;

LAST_NAME            MAJOR              
-------------------- --------------------
THOMPSON             MKT                 
SMITH                MGT                 
JAMES                COMP-SCI            
JONES                ACCT                
JHONSON              COMP-SCI            
BLACK                EET                 
YOUNG                COMP-SCI            
SMITH                COMP-SCI            
GREEN                MATH 

Date Functions: Date pictures 

select 	DNO, TNUMB, START_DATE
		,to_char(START_DATE, 'DD-MON-YY') as START_DATE_CHAR
		,to_char(START_DATE, '"START year is "YY') as START_DATE_Year
from EDU2.DEPT_CHAIR;

DNO   TNUMB START_DATE START_DATE_CHAR    START_DATE_YEAR
----- ----- ---------- ------------------ ----------------
d11   t21   01-SEP-02  01-SEP-02          START year is 02
d11   t42   01-SEP-12  01-SEP-12          START year is 12
d11   t75   01-SEP-18  01-SEP-18          START year is 18
d11   t79   01-SEP-11  01-SEP-11          START year is 11
d14   t9    01-SEP-13  01-SEP-13          START year is 13
d5    t96   01-SEP-02  01-SEP-02          START year is 02
d9    t5    01-SEP-08  01-SEP-08          START year is 08


**1. Add_Months function

select 	DNO, 
		START_DATE+365 as "ONE YEAR ANNIVERSERY",
		add_months (START_DATE, 12) as "YEAR PLUS 1"
from EDU2.DEPT_CHAIR
where DNO = 'd11';

DNO   ONE YEAR ANNIVERSERY YEAR PLUS 1
----- -------------------- -----------
d11   01-SEP-03            01-SEP-03  
d11   01-SEP-13            01-SEP-13  
d11   01-SEP-19            01-SEP-19  
d11   31-AUG-12            01-SEP-12 


2. Months_Between Functions

select DNO, Months_between(START_DATE, END_DATE) as "FIRED"
from EDU2.DEPT_CHAIR;

DNO        FIRED
----- ----------
d11     -1.1E+02
d11     -3.6E+01
d11     -7.2E+01
d11             
d14             
d5              
d9              


3. LAST_DAY  Functions: Multiplication

select 	DOB 
	, Last_day(DOB) Last_Date
	, to_char(Last_day(DOB), 'DAY') DAY
from OES.EMPLOYEE;

DOB       LAST_DATE DAY                                
--------- --------- ------------------------------------
12-MAY-54 31-MAY-54 MONDAY                              
29-APR-33 30-APR-33 SATURDAY  

4. Next_Day Functions

select lname, fname, DOB,next_day(add_months(DOB, 12*21), 'Saturday') as "Sat After" 
from OES.EMPLOYEE;

Last Name  First Name DOB       Sat After
---------- ---------- --------- ---------
Holman     Judy       29-APR-35 06-MAY-56
Wyatt      Jullian    29-APR-33 02-MAY-54
Hanzdo     Lee        30-APR-31 04-MAY-52
Stewart    Macy       30-APR-29 07-MAY-50


5. DECODE function 


SELECT RANKID, RANK_TITLE, DECODE(RANK_TITLE,'Associate Professor','professor',
'Adjunct', 'Assistant Professor','other') as "New Position" from EDU2.TEACHER_RANK;

RANKI RANK_TITLE                                         New Position      
----- -------------------------------------------------- -------------------
1     professor                                          other              
2     Associate Professor                                professor          
3     Assistant Professor                                other              
4     Instructor                                         other              
5     Adjunct                                            Assistant Professor
6     Teaching_Assitant                                  other              


6. CASE expressions 

SELECT (CASE 
	WHEN START_AMT >=5000 AND START_AMT <7000 THEN '5000 TO 7000'
	WHEN START_AMT >=50000 AND START_AMT <120000 THEN '50000 TO 120000'
	
	WHEN START_AMT >150000 THEN 'ABOVE 150000' END) "RANGE", COUNT(*) AS SALARY_RANGE
FROM EDU2.RANK_SAL_RANGE
GROUP BY (CASE 
	WHEN START_AMT >=5000 AND START_AMT <7000 THEN '5000 TO 7000'
	WHEN START_AMT >=50000 AND START_AMT <120000 THEN '50000 TO 120000'
	WHEN START_AMT >150000 THEN 'ABOVE 150000' END);

RANGE                                      SALARY_RANGE
--------------- ---------------------------------------
                                                      1
50000 TO 120000                                       3
5000 TO 7000                                          1


7. TO_NUMBER, TO_CHAR - Examples

SELECT  TNUMB, START_DATE,
 to_number(substr(START_DATE, 8, 2)) Year_As_Number,
 to_number(substr(START_DATE, 1, 2)) Day_As_Number,
 to_number(Ascii(to_CHAR(START_DATE, 'dd-MON-yy'))) Date_As_Number 
FROM EDU2.DEPT_CHAIR;


TNUMB      START_DATE YEAR_AS_NU DAY_AS_NUM DATE_AS_NU
---------- ---------- ---------- ---------- ----------
t21        01-SEP-02           2          1         48
t42        01-SEP-12          12          1         48
t75        01-SEP-18          18          1         48
t79        01-SEP-11          11          1         48
t9         01-SEP-13          13          1         48
t96        01-SEP-02           2          1         48
t5         01-SEP-08           8          1         48



8. NVL function

SELECT DNO, TNUMB, NVL(TNUMB,'NULL') NVL_USE
FROM EDU2.DEPT_CHAIR;


DNO   TNUMB      NVL_U
----- ---------- -----
d11   t21        t21  
d11   t42        t42  
d11   t75        t75  
d11   t79        t79  
d14   t9         t9   
d5    t96        t96  
d9    t5         t5  



9. NVL2-Function

SELECT DNO, TNUMB , 
NVL2(TNUMB,'MATCH','NOT_MATCH') NVL2_USE
FROM EDU2.DEPT_CHAIR;


DNO   TNUMB      NVL2_USE
----- ---------- ---------
d11   t21        MATCH    
d11   t42        MATCH    
d11   t75        MATCH    
d11   t79        MATCH    
d14   t9         MATCH    
d5    t96        MATCH    
d9    t5         MATCH 